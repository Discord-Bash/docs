{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Links Main repo: https://github.com/CyberL1/Discord-Bash Docs: https://discord-bash.github.io/docs","title":"Home"},{"location":"#links","text":"Main repo: https://github.com/CyberL1/Discord-Bash Docs: https://discord-bash.github.io/docs","title":"Links"},{"location":"file-structure/","text":"All files and directories are created on every login to the system (mention the bot). /bin /bin contains all system commands. /home /home contains user account directories /home/{user.id} contains the user files /home/{user.id}/local /home/{user.id}/local contains the user's autorun/script folders /home/{user.id}/local/autorun contains the user's shell scripts to be autoran every login /home/{user.id}/local/bin contains the user's shell scripts which can be accessed globally within their account /packages /packages contains all installed packages /packages/{package} contains all the package files /packages/{package}/commands contains all the package commands Note You cannot go to the top of filesystem because of security, so to add a new command you must connect to machine where you run the bot and add it from there, then restart the bot.","title":"File structure"},{"location":"initial-setup/","text":"Prepare the bot to initial setup In a terminal in the bot folder run the following: git clone https://github.com/CyberL1/Discord-Bash.git Cloning the repository cd Discord-Bash Entering the repository directory Requirements git can be installed with sudo apt install git node Version 12.0.0 or higher wget can be installed with sudo apt install wget","title":"Initial setup"},{"location":"initial-setup/#prepare-the-bot-to-initial-setup","text":"In a terminal in the bot folder run the following: git clone https://github.com/CyberL1/Discord-Bash.git Cloning the repository cd Discord-Bash Entering the repository directory","title":"Prepare the bot to initial setup"},{"location":"initial-setup/#requirements","text":"git can be installed with sudo apt install git node Version 12.0.0 or higher wget can be installed with sudo apt install wget","title":"Requirements"},{"location":"setup/","text":"How to setup the bot? Go to Discord Developers page and click New Application to create an application. Creating an application Go to Bot section of the app and click Add Bot . Creating a bot Go to OAuth2 section and check bot in SCOPES section. Checking bot in SCOPES section In BOT PERMISSIONS session, check Send Messages . Checking Send Messages in BOT PERMISSIONS Click the blue Copy button in SCOPES section and invite the bot to a guild of your choice. Inviting the bot The bot should be in your guild, now we need to provide a token to run it. The bot is offline Run the bot to generate system settings file. Generating settings file Go to your appication on Discord Developers page . Go to the Bot section of it and click the blue Copy button in TOKEN section. Copying the bot token Paste the token to token field in the settings.json file. Inserting the token to settings file Open terminal in the bot's folder and type node index.js . Launching the bot That's it, the bot is running now. The bot is now online","title":"Setup"},{"location":"setup/#how-to-setup-the-bot","text":"Go to Discord Developers page and click New Application to create an application. Creating an application Go to Bot section of the app and click Add Bot . Creating a bot Go to OAuth2 section and check bot in SCOPES section. Checking bot in SCOPES section In BOT PERMISSIONS session, check Send Messages . Checking Send Messages in BOT PERMISSIONS Click the blue Copy button in SCOPES section and invite the bot to a guild of your choice. Inviting the bot The bot should be in your guild, now we need to provide a token to run it. The bot is offline Run the bot to generate system settings file. Generating settings file Go to your appication on Discord Developers page . Go to the Bot section of it and click the blue Copy button in TOKEN section. Copying the bot token Paste the token to token field in the settings.json file. Inserting the token to settings file Open terminal in the bot's folder and type node index.js . Launching the bot That's it, the bot is running now. The bot is now online","title":"How to setup the bot?"},{"location":"troubleshooting/","text":"settings.json missing On every launch, the bot checks for the settings file, if the file cannot be found, it will be created and you'll be informed by the console. Files/Directories missing On every user login, the bot checks its filesystem for all files and directories needed to work properly, if some file or directory doesn't exist, the bot will create it automatically, so you don't need to do anything, just login to the system and let it do the work.","title":"Troubleshooting"},{"location":"troubleshooting/#settingsjson-missing","text":"On every launch, the bot checks for the settings file, if the file cannot be found, it will be created and you'll be informed by the console.","title":"settings.json missing"},{"location":"troubleshooting/#filesdirectories-missing","text":"On every user login, the bot checks its filesystem for all files and directories needed to work properly, if some file or directory doesn't exist, the bot will create it automatically, so you don't need to do anything, just login to the system and let it do the work.","title":"Files/Directories missing"}]}